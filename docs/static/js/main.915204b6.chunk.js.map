{"version":3,"sources":["types/types.js","actions/auth.js","components/hero/HeroeInfo.js","helpers/checkPowerTeam.js","components/team/TeamCard.js","actions/hero.js","components/hero/Heroes.js","components/Navbar.js","components/team/Powerstats.js","components/team/Appearance.js","components/team/Team.js","components/HomeScreen.js","components/LoginScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/heroReducer.js","store/store.js","App.js","index.js"],"names":["types","startChecking","dispatch","a","localStorage","getItem","type","logout","HeroeInfo","current","useSelector","state","hero","heroId","useParams","filter","heroes","id","funcionBack","value","slice","className","style","width","src","image","url","height","alt","name","appearance","weight","biography","aliases","map","alias","work","base","to","checkPowerTeam","powerstats","intelligence","strength","speed","durability","power","combat","TeamCard","team","valuesPow","Object","values","namesPow","keys","useDispatch","heroIncluded","h","includes","onClick","e","preventDefault","goodsHeroes","alignment","badsHeroes","length","Swal","fire","payload","addHero","h2","Number","heightSum","weightSum","i","deleteHero","heightRes","Heroes","Navbar","clear","Powerstats","powerStats","powers","push","powerStatsSort","sort","b","Appearance","heightNotNullTotal","weightNotNullTotal","w","toFixed","Team","HomeScreen","initialValues","validate","errores","test","onSubmit","resetForm","axios","get","then","response","data","results","catch","err","searchHero","errors","handleSubmit","handleChange","handleBlur","placeholder","onChange","onBlur","LoginScreen","email","password","post","setItem","token","startLogin","touched","autoComplete","PrivateRoute","isAuthenticated","element","PublicRoute","AppRouter","checking","auth","useEffect","path","initialState","active","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","her","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.915204b6.chunk.js","sourcesContent":["\n\n\n\n\nexport const types = {\n\n        login: '[Auth] Login',\n        logout: '[Auth] Logout',\n        \n        checkingStart: '[Auth] cheking start',\n        checkingFinish: '[Auth] checking finish',\n\n        teamHero: '[hero] team hero',\n        currentHero: '[hero] current hero',\n        removeHeros: '[hero] remove heroes',\n        deleteHero: '[hero] delete hero',\n\n        heightSum: '[hero] height sum',\n        heightRes: '[hero] height res',\n\n        weightSum: '[hero] weight sum',\n        weightRes: '[hero] weight res'\n      \n}\n\n","import axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { types } from \"../types/types\";\n\n\nexport const startLogin = ({email,password}) =>{\n        return async(dispatch) =>{      \n        \n                await axios.post(\"http://challenge-react.alkemy.org/\", {\n                         email,\n                         password,\n    \n                }).then(function (response) {\n                        localStorage.setItem(\"token\", response.data.token);\n                        dispatch({\n                                type: types.login\n                        })\n                        dispatch(startChecking())\n                        \n                }).catch(function (err) {\n                         Swal.fire('Contraseña o Password incorrectos', 'error')\n                })\n                \n                        \n               \n        }\n}\n\n\n\n\nexport const startChecking = () =>{\n        return async (dispatch) =>{\n\n                if (localStorage.getItem('token')) {\n                        dispatch({type: types.checkingStart})\n                        \n                } else{\n                        dispatch({\n                                type: types.checkingFinish\n                        })\n                }\n        }\n}\n\n\n\n\n\nexport const checkingFinish = () => {\n        return (dispatch) =>{\n                localStorage.clear();                \n                dispatch( logout() );\n        }\n}\n\n\nconst logout = () => ({\n        type: types.logout,\n})","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useParams } from 'react-router'\nimport { Link } from 'react-router-dom'\n\n\nexport const HeroeInfo = () => {\n\n        const {current} = useSelector(state => state.hero)\n        const { heroId}= useParams()\n        const heroFilter = current.filter( (heroes) =>(heroes.id===heroId))\n        const hero = heroFilter[0]\n\n        const funcionBack = (value) =>{                \n                if ((value.slice(0,2)==0)) {\n                        return \"-\"                        \n                }else{return value}\n        }\n\n\n        \n        \n        return (\n                <div className=\" row justify-content-center mt-4 mb-4\">\n                        <div className=\"card \"style={{width:\"28rem\"}} >\n                                <div className=\"container mt-4 mb-4\">\n                                        <img src={hero.image.url} className=\" mx-auto d-block\" width=\"200\" height=\"auto\" alt={hero.name}/>\n\n                                </div>\n                                \n                                <ul className=\"list-group list-group-flush\">\n                                        <li className=\"list-group-item\"><b>Peso:</b>  {funcionBack(hero.appearance.weight[1])}</li>\n                                        <li className=\"list-group-item\"><b>Altura:</b> {funcionBack(hero.appearance.height[1])}</li>\n                                        <li className=\"list-group-item\"><b>Nombre:</b> {hero.name}</li>\n                                        <li className=\"list-group-item\"><b>Alias:</b> {hero.biography.aliases.map((alias)=>(\n                                                <span key={alias}>{alias} - </span>\n                                        ))}</li>\n\n                                        <li className=\"list-group-item\"><b>Color de ojos:</b> {hero.appearance[\"eye-color\"]}</li>\n                                        <li className=\"list-group-item\"><b>Color de cabello:</b> {hero.appearance[\"hair-color\"]}</li>\n                                        <li className=\"list-group-item\"><b>Lugar de trabajo:</b> {hero.work.base}</li>\n\n                                </ul>\n                                <div className=\"card-body mx-auto d-block\">\n                                        <Link className=\"\" to={`./home}`}>\n                                                Regresar\n                                         </Link>\n                                </div>\n                                \n                        </div>\n                </div>\n        )\n}\n","\n\n\nexport const checkPowerTeam = (hero) =>{\n               \n                if (hero.powerstats.intelligence === \"null\") hero.powerstats.intelligence = 0;\n                if (hero.powerstats.strength === \"null\") hero.powerstats.strength = 0;\n                if (hero.powerstats.speed === \"null\") hero.powerstats.speed = 0;\n                if (hero.powerstats.durability === \"null\") hero.powerstats.durability = 0;\n                if (hero.powerstats.power === \"null\") hero.powerstats.power = 0;\n                if (hero.powerstats.combat === \"null\") hero.powerstats.combat = 0;\n                return hero\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport {  addHero, deleteHero, heightRes, heightSum, weightSum } from '../../actions/hero'\nimport './style.css'\n\nexport const TeamCard = (hero) => {\n\n        const {team} = useSelector(state => state.hero)\n\n        const valuesPow = Object.values(hero.powerstats )\n        const namesPow = Object.keys(hero.powerstats )        \n        const dispatch = useDispatch()\n\n   \n\n        const handleDelete = (e)=>{\n                e.preventDefault()\n                dispatch(deleteHero(hero))\n                dispatch(heightRes(hero))\n\n        }\n        const handleAdd = (e) =>{\n                e.preventDefault()\n                dispatch(addHero(hero,team))\n                dispatch(heightSum(hero,team))\n                dispatch(weightSum(hero,team))\n        }\n\n        const heroIncluded = team.map((h) =>{\n                        return h.id=== hero.id\n                }) \n        \n                      \n        \n        return (\n                <div>\n                        <div className=\"maincontainer mb-4 \">\n                                <div className={heroIncluded.includes(true)? \"thecard\":\"\"}>\n                                        <div className=\"thefront \">\n\n                                                <h1>{hero.name}</h1>\n                                                <div className=\"container text-center \">\n\n                                                <img className= \"img-fluid  \" \n                                                        src={hero.image.url} \n                                                        alt=\"hero.name\"\n                                                        width={heroIncluded.includes(true)? \"180\":\"150\"} \n                                                        height=\"auto\"/>\n                                                </div>     \n                                                <div className={heroIncluded.includes(true)? \"d-none\":\"d-grid  mx-auto mt-3\"}>\n                                                        <button \n                                                                type=\"button\" \n                                                                className=\"btn  btn-primary \"\n                                                                onClick={handleAdd}\n                                                                >\n                                                                        Agregar\n                                                        </button>\n\n                                                       \n                                                       \n\n                                                </div>   \n                                                <div className={heroIncluded.includes(true)?\"d-none\":\"d-grid mx-auto \"}>\n                                                        <Link className=\"badge badge-info\" to={`./home/${hero.id}`}>\n                                                                        Mas info...\n                                                                </Link>                                     \n                                                \n                                                </div>  \n                                        \n                                        </div>\n\n                                                                                    \n                                        \n                  \n\n                                        <div className={heroIncluded.includes(true)? \"theback\":\"d-none\"}>\n\n                                                <h4>{hero.name}</h4>\n                                                <p>{hero.biography.alignment}</p>\n\n                                                  <div className=\"container mb-4   \">\n                                                          <div className=\"row\">\n\n                                                                <dt>Powerstats</dt>\n                                                                        {\n                                                                                namesPow.map((name,i)=>(\n                                                                                        <li  key={i}>\n                                                                                                {name}: {(valuesPow[i]===0)?\"null\":valuesPow[i]}\n                                                                                        </li>\n                                                                                ))\n                                                                        }\n                                                          </div>\n                                                  </div>\n                                                \n                                                <div className=\"container display-flex\">\n\n                                                        <button \n                                                                type=\"button\" \n                                                                className=\"btn btn-outline-success \"\n                                                                onClick={handleDelete}\n                                                                >\n                                                                        Delete\n                                                        </button>\n                                                        \n                                                        <Link className=\"badge badge-info\" to={`./home/${hero.id}`}>\n                                                                        Mas info...\n                                                        </Link>\n\n                                                       \n                                                        \n\n                                                </div>                                              \n                                        </div>\n                                </div>\n                        </div>                        \n                </div>\n        )\n}\n\n","import axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { checkPowerTeam } from \"../helpers/checkPowerTeam\";\nimport { types } from \"../types/types\";\n\n\nexport const searchHero = ({name}) => {\n\n        return async(dispatch)=>{\n\n                await axios.get(`https://superheroapi.com/api/10222829918315897/search/${name}`)\n                .then((response) =>{\n                        \n                        dispatch({\n                                type:  types.currentHero,\n                                payload: response.data.results\n                        })\n                }).catch((err) =>{\n                        Swal.fire(\"error\") \n                })\n        }\n}\n\n\nexport const addHero = (hero,team) => {\n        return (dispatch) =>{\n               \n                \n\n                const goodsHeroes = team.filter((h) =>{\n                        return (h.biography.alignment===\"good\")\n                })\n                 const badsHeroes = team.filter((h) =>{\n                        return (h.biography.alignment===\"bad\")\n                })\n       \n\n                if (team.length <= 5) {\n\n                        \n                                if (hero.biography.alignment===\"good\") {\n\n                                        if (goodsHeroes.length<=2) {\n                                                checkPowerTeam(hero)\n                                                Swal.fire('Agregado al equipo!', '', 'success')\n                                                dispatch({\n                                                type: types.teamHero,\n                                                payload:  hero                              \n                                                })   \n\n\n                                                \n                                        }else{\n                                                Swal.fire(\"cantidad de buenos en equipo completo\")   \n                                        }\n                                        \n                                } else{\n\n                                        if (badsHeroes.length<=2) {\n                                                checkPowerTeam(hero)\n                                                Swal.fire('Agregado al equipo!', '', 'success')\n                                                dispatch({\n                                                type: types.teamHero,\n                                                payload: hero                              \n                                                })     \n                                              \n                                        }else{\n                                                Swal.fire(\"cantidad de malos en equipo completo\")\n                                        }\n\n                                }     \n\n                        \n\n                } else{ Swal.fire(\"Equipo completo\")}  \n        \n        }\n}\n\nexport const removeHeroes = ()=> {\n        return(dispatch)=>{\n                dispatch({\n                        type: types.removeHeros\n                })\n                \n        }\n}\n\nexport  const deleteHero = (hero)=>{\n        return(dispatch)=>{\n                checkPowerTeam(hero)\n                dispatch({\n                        type: types.deleteHero,\n                        payload: hero\n                })\n        }\n        \n}\n\n\nexport  const heightSum = (hero)=>{\n        return(dispatch)=>{              \n\n                const h2=Number(hero.appearance.height[1].slice(0,3))\n                if (Number(h2)) {                        \n        \n                        dispatch({\n                                type: types.heightSum,\n                                payload: h2\n                        })\n                        \n                }\n        }\n        \n}\n\nexport  const heightRes = (hero)=>{\n        return(dispatch)=>{\n\n                const h2=Number(hero.appearance.height[1].slice(0,3))\n                if (Number(h2)) { \n\n        \n                        dispatch({\n                                type: types.heightRes,\n                                payload: h2\n                        })\n                        \n                }\n        }\n        \n}\n\nexport  const weightSum = (hero)=>{\n        return(dispatch)=>{              \n\n                const h2=Number(hero.appearance.weight[0].slice(0,3))\n                if (Number(h2)) {                        \n        \n                        dispatch({\n                                type: types.weightSum,\n                                payload: h2\n                        })\n                        \n                }\n        }\n        \n}\nexport  const weightRes = (hero)=>{\n        return(dispatch)=>{              \n\n                const h2=Number(hero.appearance.weight[0].slice(0,3))\n                if (Number(h2)) {                        \n        \n                        dispatch({\n                                type: types.weightRes,\n                                payload: h2\n                        })\n                        \n                }\n        }\n        \n}\n\n\n\n\n\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { TeamCard } from '../team/TeamCard'\n\nexport const Heroes = () => {\n\n         const {current} = useSelector(state => state.hero)     \n\n        return (\n                <div>\n                        <hr/>\n                                <div className=\"divider\">\n                                         <br/>                        \n                                         <div className=\"row row-cols-1 row-cols-md-3 \">\n                        \n                                           {\n                                                (!!current)&&\n                                                current.map(hero=>(\n                                                <TeamCard\n                                                                key={hero.id}\n                                                                {...hero}\n                                                        />\n                                                \n                                                 ))\n                                                \n                                         }\n                                          </div>\n                                </div>\n                                <hr className=\"mt-10 mb-3\"/>\n\n\n                </div>\n        )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { checkingFinish } from '../actions/auth'\nimport { removeHeroes } from '../actions/hero'\n\nexport const Navbar = () => {\n\n\n         const dispatch = useDispatch()\n        \n        const handleLogout = () =>{\n                dispatch(checkingFinish())\n                dispatch(removeHeroes())\n        }\n\n        return (\n                <div>\n                        <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark bg-gradient  \">\n                                        <div className=\"container  \">\n                                                <ul className=\"navbar-nav ms-auto \">\n                                                        <button \n                                                                className='btn btn-danger me-md-2'\n                                                                onClick={handleLogout}\n                                                                >\n                                                                 <i className=\"fas fa-sign-out-alt\"> </i>\n                                                                 <span>  Salir</span>\n                                                        </button> \n                                                </ul>\n                                        </div>\n                                </nav>\n                </div>\n        )\n}\n\n","import { useSelector } from 'react-redux'\n\nexport const Powerstats = () => {\n\n\n\n\n        const {powerstats} = useSelector(state => state.hero)\n        const valuesPow = Object.values(powerstats )\n        const namesPow = Object.keys(powerstats )       \n\n        const powerStats = []\n        var powers ={\n                name:\"\",\n                value:\" \",\n        }\n\n        for (let i = 0; i < namesPow.length; i++) {\n                powers={\n                        name: namesPow[i],\n                        value: valuesPow[i]\n                };\n                powerStats.push(powers)\n                \n        }\n\n         const powerStatsSort = (powerStats.sort(function(a, b)  { return b.value - a.value } ));\n\n        return (\n                <div  className=\"container border pb-4\">\n\n                        <div className=\"card text-center mt-4 ms-2 me-2 bg-dark text-white\">\n                                <div className=\"card-header\">\n                                        <h3>Poderes acumulados</h3>\n                                </div>\n                                <div className=\"card-body\">\n                                        {\n                                                powerStatsSort.map((name,i)=>(                                                       \n                                                        \n                                                        <li key={i}  >\n                                                                {name.name}: {name.value}\n\n                                                        </li>\n                                                ))\n                                        }\n                                </div>\n                                \n                        </div>\n                </div>\n        )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nexport const Appearance = () => {\n\n\n\n        const {height,weight,team} = useSelector(state => state.hero)\n\n       \n\n        const heightNotNullTotal = team.filter((hero)=>{\n                if (Number(hero.appearance.height[1].slice(0,3))) {\n                        return hero                        \n                } \n        })\n        const weightNotNullTotal = team.filter((hero)=>{\n                if (Number(hero.appearance.weight[0].slice(0,3))) {\n                        return hero                        \n                }\n        })\n\n        const h = height/(heightNotNullTotal.length)\n        const w =weight/(weightNotNullTotal.length)\n\n        return (\n               <div  className=\"container border pb-4\">\n\n                        <div className=\"card text-center mt-4 ms-2 me-2 bg-dark text-white\">\n                                \n                                <div className=\"card-body\">\n                                        Altura promedio:  {h.toFixed(2)}\n                                        <br/>\n                                        Peso promedio:  {w.toFixed(2)}\n                                        \n                                </div>\n                                <div className=\"card-footer text-muted\">\n                                         altura y peso \n                                </div>\n                        </div>\n                </div>\n        )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { TeamCard } from './TeamCard'\nimport {Powerstats} from './Powerstats'\nimport { Appearance } from './Appearance'\n\nexport const Team = () => {\n\n        const {team} = useSelector(state => state.hero)            \n        \n        return (\n                <div>\n                        { \n                                ( team.length!==0)\n                                && (\n                                        <div>\n                                                <div className=\"container border pb-4\">                                                        \n                                                        <div className=\"divider\">                                        \n                                                                <h1 className=\"text-center mt-4 mb-4 text-white\">EQUIPO</h1>                                \n                                                                <div className=\"row row-cols-1 row-cols-md-3 g-4 \">                                \n                                                                        {\n                                                                                (!!team)\n                                                                                ? team.map(hero=>(\n                                                                                <TeamCard\n                                                                                                key={hero.id}\n                                                                                                {...hero}\n                                                                                        />\n                                                                                \n                                                                                ))\n                                                                                : <h1>No hay resultados</h1>\n                                                                        }\n                                                                </div>\n                                                        </div>\n                                                </div>     \n\n                                                <div>                                                        \n                                                        <Powerstats/>                                        \n                                                </div>  \n                                                \n                                                <div>                                                        \n                                                        <Appearance/>                                        \n                                                </div>                                   \n                                        </div>  \n                                )\n                        }\n                </div>\n        )\n}\n","import { Field, Form, Formik } from 'formik'\nimport { useDispatch } from 'react-redux'\nimport { searchHero } from '../actions/hero'\nimport { Heroes } from './hero/Heroes'\nimport { Navbar } from './Navbar'\nimport { Team } from './team/Team'\n\nconst HomeScreen = () => {\n\n        const dispatch = useDispatch()       \n\n\n        return (\n                <> \n                        <div className=\"top-header py-4 mt-4\">\n                                <div className=\"container text-center text-white\">\n                                        <h1>Challenge react</h1>\n                                </div>\n                        </div>\n                \n                                \n                        <Navbar/>    \n\n                        <Team/>  \n\n                        <Formik\n                                initialValues = {{name:\"\"}}\n                                validate={ (values)=>{\n                                        let errores={};\n                                        if (!values.name) {\n                                                errores.name=\"campo vacío\"\n                                                \n                                        }else if (!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(values.name)) {\n                                                errores.name = \"El nombre debe poseer solo caracteres válidos\"\n                                        }\n                                        return errores;\n\n                                }}\n                                onSubmit={\n                                        (values,{resetForm})=>{\n                                                resetForm();\n                                                dispatch(searchHero(values))\n\n                                        }\n                                }\n                        >\n                                {({values,errors,handleSubmit,handleChange,handleBlur})=>(\n\n                                        <Form onSubmit={handleSubmit}>\n                                                <nav className=\"navbar d-flex justify-content-center  navbar-expand-md mt-4 navbar-dark bg-dark \">\n                                                        <div className=\"m-2 \">\n\n                                                                <div className=\"  d-flex justify-content-center\">                                       \n                                                                        \n                                                                        <Field \n                                                                                className=\"form-control me-2\" \n                                                                                type=\"text\" \n                                                                                placeholder=\"Ingresar heroe...\" \n                                                                                name=\"name\"\n                                                                                value={values.name}\n                                                                                onChange={handleChange}\n                                                                                onBlur={handleBlur}\n                                                                        />\n                                                                        <button         \n                                                                                className=\"btn btn-outline-success\"     \n                                                                                type=\"submit\"  \n                                                                                value=\"Buscar\"                                                      \n                                                                                \n                                                                                >Buscar</button>\n                                                                                        \n\n                                                                </div >\n                                        \n                                                                        {errors.name && \n                                                                        <p className=\"error \">{errors.name}</p>}\n                                                        </div>\n                                                        \n                                                        \n                                                </nav>\n                                        </Form>\n                                )}\n\n                        </Formik>\n\n\n                        \n                        <Heroes/>\n                        \n                </>\n\n                \n        )\n}\n\nexport default HomeScreen\n\n\n","import {  Field, Form, Formik } from 'formik'\nimport React from 'react'\nimport { useDispatch } from 'react-redux'\nimport {  startLogin } from '../actions/auth'\nimport \"./style.css\"\n\n\n\n\n\nconst LoginScreen = () => {\n\n        const dispatch = useDispatch()\n        \n        return (\n                <div className=\"center\">\n                        <h1>Login</h1>\n                        <Formik\n                                initialValues={{email:\"challenge@alkemy.org\", password:\"\"}}\n                        // react\n                               validate={(values)=>{\n                                       \n                                       let errores = {};\n\n                                       if (!values.email) {\n                                               errores.email = \"Ingresar correo\"\n                                       }else if (!/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(values.email)) {\n                                               errores.email = \"El correo de poseer caracteres válidos\"\n                                       }\n\n                                       if (!values.password) {\n                                               errores.password =\"Ingresar contraseña\"\n                                               \n                                       }\n\n                                       return errores;\n\n                               }}\n                                onSubmit={\n                                        (values, {resetForm}) =>{    \n                                                resetForm();                                            \n                                                dispatch(startLogin(values));\n                                        }\n                                }\n                        >\n                                {( {values,errors,touched,handleSubmit,handleChange,handleBlur}) =>(\n                                        <Form onSubmit={handleSubmit}>  \n\n                                                <div className=\"txt_field\">\n                                                        <Field \n                                                                type=\"text\" \n                                                                name=\"email\"\n                                                                autoComplete=\"off\"\n                                                                value={values.email}\n                                                                onChange={handleChange}\n                                                                onBlur={handleBlur}\n                                                                />    \n                                                        <span></span>\n                                                        <label>Email</label>   \n                                                                {touched.email && errors.email && <p className=\"error\">{errors.email}</p> }                                   \n                                                </div>\n                                        \n                                                <div className=\"txt_field\">                                        \n                                                                <Field \n                                                                        type=\"password\" \n                                                                        name=\"password\"\n                                                                        autoComplete=\"off\"\n                                                                        value={values.password}\n                                                                        onChange={handleChange}\n                                                                        onBlur={handleBlur}\n                                                                        />    \n                                                                <span></span>\n                                                                <label>Password</label> \n                                                                        {touched.password \n                                                                        && errors.password \n                                                                        && <p className=\" error\"> \n                                                                        {errors.password}</p>}               \n                                                </div>\n                                        \n                                                <input \n                                                        type=\"submit\" \n                                                        value=\"Enviar\"\n                                                />     \n                                        </Form> \n                                )}\n                        </Formik>\n                </div>    \n        )\n}\n\nexport default LoginScreen\n","import React from 'react'\nimport { Navigate } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\n\nexport const PrivateRoute = ({isAuthenticated, element,}) => {\n        \n        return (\n                (isAuthenticated)\n                        ? (element)\n                        : (<Navigate to=\"/login\"/>)\n        )\n}\n\nPrivateRoute.propTypes = {\n        isAuthenticated: PropTypes.bool.isRequired,\n        element: PropTypes.object.isRequired\n}","import React from 'react'\nimport { Navigate } from 'react-router'\nimport PropTypes from 'prop-types'\n\n\nexport const PublicRoute = ({ isAuthenticated, element }) =>{\n        \n        return (\n                (!isAuthenticated)\n                        ? (element)\n                        :(<Navigate to= '/home' />)\n        )\n}\n\nPublicRoute.propTypes = {\n        isAuthenticated: PropTypes.bool.isRequired,\n        element: PropTypes.object.isRequired\n}","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Routes,\n    Route,\n    \n  } from 'react-router-dom';\nimport { startChecking } from '../actions/auth';\nimport { HeroeInfo } from '../components/hero/HeroeInfo';\nimport HomeScreen from '../components/HomeScreen';\nimport LoginScreen from '../components/LoginScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\n\n\n\nexport const AppRouter = () => {\n\n        const dispatch = useDispatch()\n        const {checking} = useSelector(state => state.auth)\n     \n        useEffect(() => {\n                dispatch(startChecking())\n        }, [dispatch])\n\n        return (\n                \n                <Router>\n                        <Routes>\n                                <Route\n                                        path='/*'\n                                        element={\n                                                <PrivateRoute\n                                                        isAuthenticated={!!checking}\n                                                        element={<HomeScreen/>}\n                                                />\n                                        }\n                                />\n\n                                <Route\n                                        path='/login'\n                                         element={\n                                                <PublicRoute\n                                                        isAuthenticated={!!checking}\n                                                        element={<LoginScreen/>}\n                                                />\n                                        }\n                                />\n                                <Route\n                                        path='/home/:heroId'\n                                         element={\n                                                <PrivateRoute\n                                                        isAuthenticated={!!checking}\n                                                        element={<HeroeInfo/>}\n                                                />\n                                        }\n                                />\n                        </Routes>\n                        \n                </Router>\n\n        )\n}\n","import { types } from \"../types/types\";\n\n\nconst initialState ={\n        active:false,\n        checking: false\n}\n\nexport const authReducer = (state={initialState}, action) =>{\n        switch (action.type) {\n\n                case types.login:\n                        return {\n                                ...state,\n                                active:true,\n                                \n                        }\n                case types.logout:\n                return {\n\n                        ...initialState\n\n                }\n                \n                case types.checkingStart:\n                return {\n                        ...state,\n                        checking:true\n                }\n                case types.checkingFinish:\n                return {\n                        ...state,\n                        checking:false\n                }\n        \n                default:\n                        return state;\n        }\n\n}","import { types } from \"../types/types\";\n\n\nconst initialState ={\n        \n        team: [],\n        current: [],\n        powerstats: {\n                intelligence:0,\n                strength: 0,\n                speed: 0,\n                durability: 0,\n                power: 0,\n                combat: 0,\n        },\n        height: 0,\n        weight:0\n\n}\n\n\n\n\nexport const heroReducer = (state=initialState, action) =>{\n        switch (action.type) {\n                \n                case types.teamHero:\n                        return {\n                                ...state,\n                                team: [...state.team,action.payload ],    \n                                powerstats:{\n                                        intelligence:\n                                                state.powerstats.intelligence + Number(action.payload.powerstats.intelligence),\n                                                strength: state.powerstats.strength + Number(action.payload.powerstats.strength),\n                                                speed: state.powerstats.speed + Number(action.payload.powerstats.speed),\n                                                durability:state.powerstats.durability + Number(action.payload.powerstats.durability),\n                                                power: state.powerstats.power + Number(action.payload.powerstats.power),\n                                                combat: state.powerstats.combat + Number(action.payload.powerstats.combat),\n                                }  \n\n                        }         \n                case types.heightSum:\n                        return {\n                                ...state,\n                                height: state.height + action.payload\n                        }  \n                case types.heightRes:\n                        return{\n                                ...state,\n                                height: state.height - action.payload\n                        }  \n                          \n                case types.weightSum:\n                        return {\n                                ...state,\n                                weight: state.weight + action.payload\n                        }  \n                case types.weightRes:\n                        return{\n                                ...state,\n                                weight: state.weight - action.payload\n                        }                     \n                        \n                 case types.currentHero:\n                        return {\n                                ...state,\n                                current: action.payload,\n                                \n                        }  \n                case types.removeHeros:\n                        return {\n                                ...initialState\n                        }    \n                case types.deleteHero:\n                        \n                        return {\n                                ...state,\n                                team: state.team.filter(her => her.id !== action.payload.id ),  \n                                powerstats:{\n                                        intelligence:\n                                                state.powerstats.intelligence - Number(action.payload.powerstats.intelligence),\n                                                strength: state.powerstats.strength - Number(action.payload.powerstats.strength),\n                                                speed: state.powerstats.speed - Number(action.payload.powerstats.speed),\n                                                durability:\n                                                state.powerstats.durability - Number(action.payload.powerstats.durability),\n                                                power: state.powerstats.power - Number(action.payload.powerstats.power),\n                                                combat: state.powerstats.combat - Number(action.payload.powerstats.combat)\n                                }    \n                        }      \n                        \n                default:\n                        return state;\n        }\n\n}","\nimport {applyMiddleware, combineReducers, compose, createStore} from 'redux';\nimport { authReducer } from '../reducers/authReducer';\nimport thunk from 'redux-thunk'\nimport { heroReducer } from '../reducers/heroReducer';\n\n\nconst composeEnhancers = (\n        typeof window !== 'undefined' \n        && \n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__)\n        || compose;\n\n\nconst reducers = combineReducers({\n        auth: authReducer,\n        hero: heroReducer\n\n})\n\n\n\nexport const store = createStore(\n        reducers,\n       composeEnhancers(\n                applyMiddleware(thunk)\n        )\n\n        )","import { Provider } from \"react-redux\";\nimport { AppRouter } from \"./routers/AppRouter\";\nimport { store } from \"./store/store\";\n\n\n\n\nfunction App() {\n  return (\n          <Provider store={store}>\n                <AppRouter/>\n          </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}